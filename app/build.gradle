apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.frogermcs.androiddevmetrics'


android {
    if (project.hasProperty("KEY_STORE_FILE")) {
        signingConfigs {
            release {
                storeFile file(KEY_STORE_FILE)
                storePassword KEY_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
            debug {
                storeFile file(KEY_STORE_FILE)
                storePassword KEY_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
//                keyAlias DEBUG_KEY_ALIAS
//                keyPassword DEBUG_KEY_PASSWORD
            }
        }
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "it.jdark.android.retrofit"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-gson.pro'
            proguardFiles 'proguard-square-okhttp3.pro'
            proguardFiles 'proguard-square-okio.pro'
            proguardFiles 'proguard-square-retrofit2.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
            // Set this flag and use the same signature key "release" to void some message about incompatible version
            // during install of debug and release version on the same phone
            debuggable true
        }
    }

    dataBinding {
        enabled = true;
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}

project.ext {
    supportPackageVersion = '23.3.0'
    retrofitVersion = '2.0.1'
    junitVersion = '4.12'
    daggerVersion = '2.2'
    okHttp3Version = '3.2.0'
    javaxAnnotation = '10.0-b28'
    stethoVersion = '1.3.1'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile "junit:junit:${junitVersion}"
    compile "com.android.support:appcompat-v7:${supportPackageVersion}"
    compile "com.android.support:design:${supportPackageVersion}"

    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okHttp3Version}"

    // Dependency to fix annotation @Generated("org.jsonschema2pojo") that came from http://www.jsonschema2pojo.org/ if you used it to generate pojo class for json
    provided "org.glassfish:javax.annotation:${javaxAnnotation}"

    // Dependencies for debug version only that to analyse the application through chrome - Very cool network traffic tools (chrome://inspect)
    debugCompile "com.facebook.stetho:stetho:${stethoVersion}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"
    // Another option to debug Network Call
    debugCompile "com.squareup.okhttp3:logging-interceptor:${okHttp3Version}"

    // Dependency Injection with Dagger2
    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
//    provided 'org.glassfish:javax.annotation:10.0-b28'

}
